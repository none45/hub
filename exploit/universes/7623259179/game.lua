local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local plr = game.Players.LocalPlayer

local conf = loadstring(game:HttpGet('https://raw.githubusercontent.com/none45/hub/refs/heads/main/exploit/hub_settings.lua'))()
local Window = Rayfield:CreateWindow(conf[1])
local MainTab = Window:CreateTab("universal", nil) -- Title, Image
conf[2](MainTab)

local gulptab = Window:CreateTab("helpers", nil) -- Title, Image

local godmode = true

local function uwu(v)
	if v:IsA("BasePart") or v:IsA("MeshPart") then
		v.CanCollide = false
		v.CanQuery = not godmode
		v.CanTouch = not godmode
	end
end

task.spawn(function()
	local itemPools = workspace:WaitForChild("ItemPools")

	local targets = {
		{workspace:WaitForChild("Enemies"), true},
		{workspace:WaitForChild("Skinwalkers"), true},
		{itemPools:WaitForChild("Tripmines"), false},
		{itemPools:WaitForChild("SkullProjectile"), false},
		{itemPools:WaitForChild("Skull2Projectile"), false},
		{itemPools:WaitForChild("MinionCatalystProjectile"), false},
	}

	while true do
		for _, data in ipairs(targets) do
			local folder, useDescendants = data[1], data[2]
			local list = useDescendants and folder:GetDescendants() or folder:GetChildren()

			local count = 0
			for _, v in ipairs(list) do
				uwu(v)
				count += 1
				if count % 8 == 0 then
					task.wait()
				end
			end
		end
		task.wait()
	end
end)

local Toggle = gulptab:CreateToggle({
	Name = "toggle godmode (mostly works)",
	CurrentValue = godmode,
	Flag = "godmode_toggle",
	Callback = function(Value)
		godmode = Value
	end,
})

local Players = game:GetService("Players")

local function teleportToGifts(player, percent, folderName, delay)
	local normalGifts = workspace:WaitForChild("ItemPools"):WaitForChild(folderName):GetChildren()
	if #normalGifts == 0 then return end
	
	percent = math.clamp(percent, 0, 100)
	
	local count = math.floor((#normalGifts * percent) / 100)
	if count < 1 then count = 1 end

	--table.sort(normalGifts, function() return math.random() < 0.5 end)

	local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not root then return end
	local startPos = root.Position

	task.spawn(function()
		for i = 1, count do
			local gift = normalGifts[i]
			if gift and (gift:IsA("BasePart") or gift:IsA("MeshPart")) and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				if (gift.Position - startPos).Magnitude <= 10000 then
					player.Character.HumanoidRootPart.CFrame = gift.CFrame + Vector3.new(0, 1, 0)
					task.wait(delay)
				end
			end
		end
	end)
end

local wahh = gulptab:CreateButton({
	Name = "collect all normal gifts",
	Callback = function()
		teleportToGifts(Players.LocalPlayer, 100, "NormalGifts", 0.2)
	end,
})

local wahh = gulptab:CreateButton({
	Name = "collect 20% of all golden gifts",
	Callback = function()
		teleportToGifts(Players.LocalPlayer, 20, "GoldenGifts", 0.2)
	end,
})

local wahh = gulptab:CreateButton({
	Name = "collect all golden gifts (RISKYY)",
	Callback = function()
		teleportToGifts(Players.LocalPlayer, 100, "GoldenGifts", 0.2)
	end,
})

local othertab = Window:CreateTab("other", nil) -- Title, Image

local wahh = othertab:CreateButton({
	Name = "goto lobby",
	Callback = function()
		game:GetService("TeleportService"):Teleport(129279692364812, game.Players.LocalPlayer)
	end,
})
