-- Place this module (LocalScript) replacement in the same location as your original script
return function(newParent)
	local function init()
		-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw
		
		-- Decompiler will be improved VERY SOON!
		-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
		-- Decompiled on 2025-09-07 16:27:02
		-- Luau version 6, Types version 3
		-- Time taken: 0.020991 seconds
		
		-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
		task.wait()
		local UserInputService_upvr = game:GetService("UserInputService")
		local Players_upvr = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local CurrentCamera_upvw = workspace.CurrentCamera
		local function _(arg1) -- Line 11
			--[[ Upvalues[1]:
				[1]: CurrentCamera_upvw (read and write)
			]]
			local var6 = CurrentCamera_upvw
			var6.CFrame *= arg1
		end
		local LocalPlayer_upvw = Players_upvr.LocalPlayer
		local BuildReplicatorPart_upvr = game.Workspace:WaitForChild("BuildReplicatorPart")
		local Parent_upvr = script.Parent
		local PlayerGui_upvr = LocalPlayer_upvw.PlayerGui
		local Remotes = Parent_upvr:WaitForChild("Remotes")
		local Position_upvw = CurrentCamera_upvw.CFrame.Position
		local var13_upvr
		if not LocalPlayer_upvw.Character then
			local any_wait_result1_upvw = LocalPlayer_upvw.CharacterAdded:wait()
		end
		local SlotSelected_upvw = PlayerGui_upvr.TheInventorySystem.SlotSelected
		local DestroyItemRemote_upvr = Remotes.DestroyItemRemote
		local var17_upvw = false
		local var18_upvr = ReplicatedStorage.Builds[Parent_upvr.Name]
		local HotbarLine_upvw = PlayerGui_upvr.TheInventorySystem.InventoryMenu["Inventory Section"].Inv.HotbarLine
		local Hotbar_upvw = PlayerGui_upvr.TheInventorySystem.Hotbar
		local UnEquipRemote_upvw = PlayerGui_upvr.TheInventorySystem.UnEquipRemote
		local var22_upvw = false
		local var23_upvw = false
		local var24_upvw = true
		local var25_upvw = false
		local var26_upvw = false
		local var27_upvw = false
		local XYZ_upvw = PlayerGui_upvr.XYZ
		local X_upvr = XYZ_upvw.X
		local Y_upvr = XYZ_upvw.Y
		local Z_upvr = XYZ_upvw.Z
		local var32_upvw = 8.25
		X_upvr.Image = "rbxassetid://16424415475"
		local Rotate_upvw = LocalPlayer_upvw.PlayerGui.MobileButtons:WaitForChild("Rotate")
		local RotateButton_upvr = Rotate_upvw:WaitForChild("RotateButton")
		local MoveForward_upvw = LocalPlayer_upvw.PlayerGui.MobileButtons:WaitForChild("MoveForward")
		local ForwardButton_upvr = MoveForward_upvw:WaitForChild("ForwardButton")
		local MoveBackward_upvw = LocalPlayer_upvw.PlayerGui.MobileButtons:WaitForChild("MoveBackward")
		local BackwardButton_upvr = MoveBackward_upvw:WaitForChild("BackwardButton")
		local TheInventorySystem_upvr = PlayerGui_upvr.TheInventorySystem
		local Inv_upvr = TheInventorySystem_upvr.InventoryMenu["Inventory Section"].Inv
		local Storage_upvr = TheInventorySystem_upvr.InventoryMenu["HomeCore Section"].Storage
		local X = RotateButton_upvr.Screen.AbsoluteSize.X
		var13_upvr = RotateButton_upvr.Screen.AbsoluteSize.Y
		var13_upvr = 500
		if math.min(X, var13_upvr) > var13_upvr then
			X = false
		else
			X = true
		end
		if X then
			var13_upvr = 70
		else
			var13_upvr = 120
		end
		function updateInputRotate() -- Line 112
			--[[ Upvalues[4]:
				[1]: UserInputService_upvr (readonly)
				[2]: Rotate_upvw (read and write)
				[3]: RotateButton_upvr (readonly)
				[4]: var13_upvr (readonly)
			]]
			if UserInputService_upvr.TouchEnabled then
				Rotate_upvw.Enabled = true
				RotateButton_upvr.Size = UDim2.new(0, var13_upvr, 0, var13_upvr)
			end
		end
		function updateInputForward() -- Line 119
			--[[ Upvalues[4]:
				[1]: UserInputService_upvr (readonly)
				[2]: MoveForward_upvw (read and write)
				[3]: ForwardButton_upvr (readonly)
				[4]: var13_upvr (readonly)
			]]
			if UserInputService_upvr.TouchEnabled then
				MoveForward_upvw.Enabled = true
				ForwardButton_upvr.Size = UDim2.new(0, var13_upvr, 0, var13_upvr)
			end
		end
		function updateInputBackward() -- Line 126
			--[[ Upvalues[4]:
				[1]: UserInputService_upvr (readonly)
				[2]: MoveBackward_upvw (read and write)
				[3]: BackwardButton_upvr (readonly)
				[4]: var13_upvr (readonly)
			]]
			if UserInputService_upvr.TouchEnabled then
				MoveBackward_upvw.Enabled = true
				BackwardButton_upvr.Size = UDim2.new(0, var13_upvr, 0, var13_upvr)
			end
		end
		local function getAllStuff_upvr() -- Line 142, Named "getAllStuff"
			--[[ Upvalues[12]:
				[1]: LocalPlayer_upvw (read and write)
				[2]: Players_upvr (readonly)
				[3]: any_wait_result1_upvw (read and write)
				[4]: SlotSelected_upvw (read and write)
				[5]: PlayerGui_upvr (readonly)
				[6]: HotbarLine_upvw (read and write)
				[7]: Hotbar_upvw (read and write)
				[8]: UnEquipRemote_upvw (read and write)
				[9]: XYZ_upvw (read and write)
				[10]: Rotate_upvw (read and write)
				[11]: MoveForward_upvw (read and write)
				[12]: MoveBackward_upvw (read and write)
			]]
			LocalPlayer_upvw = Players_upvr.LocalPlayer
			local Character = LocalPlayer_upvw.Character
			if not Character then
				Character = LocalPlayer_upvw.CharacterAdded:wait()
			end
			any_wait_result1_upvw = Character
			SlotSelected_upvw = PlayerGui_upvr.TheInventorySystem.SlotSelected
			HotbarLine_upvw = PlayerGui_upvr.TheInventorySystem.InventoryMenu["Inventory Section"].Inv.HotbarLine
			Hotbar_upvw = PlayerGui_upvr.TheInventorySystem.Hotbar
			UnEquipRemote_upvw = PlayerGui_upvr.TheInventorySystem.UnEquipRemote
			Hotbar_upvw = PlayerGui_upvr.TheInventorySystem.Hotbar
			UnEquipRemote_upvw = PlayerGui_upvr.TheInventorySystem.UnEquipRemote
			SlotSelected_upvw = PlayerGui_upvr.TheInventorySystem.SlotSelected
			XYZ_upvw = PlayerGui_upvr.XYZ
			Rotate_upvw = LocalPlayer_upvw.PlayerGui.MobileButtons:WaitForChild("Rotate")
			MoveForward_upvw = LocalPlayer_upvw.PlayerGui.MobileButtons:WaitForChild("MoveForward")
			MoveBackward_upvw = LocalPlayer_upvw.PlayerGui.MobileButtons:WaitForChild("MoveBackward")
		end
		UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 159
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var22_upvw (read and write)
			]]
			if arg1.KeyCode == Enum.KeyCode.V and var17_upvw then
				var22_upvw = true
			end
		end)
		ForwardButton_upvr.MouseButton1Down:Connect(function() -- Line 165
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var22_upvw (read and write)
			]]
			if var17_upvw then
				var22_upvw = true
			end
		end)
		ForwardButton_upvr.MouseButton1Up:Connect(function() -- Line 171
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var22_upvw (read and write)
			]]
			if var17_upvw then
				var22_upvw = false
			end
		end)
		UserInputService_upvr.InputEnded:Connect(function(arg1, arg2) -- Line 177
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var22_upvw (read and write)
			]]
			if arg1.KeyCode == Enum.KeyCode.V and var17_upvw then
				var22_upvw = false
			end
		end)
		UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 183
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var23_upvw (read and write)
			]]
			if arg1.KeyCode == Enum.KeyCode.B and var17_upvw then
				var23_upvw = true
			end
		end)
		BackwardButton_upvr.MouseButton1Down:Connect(function() -- Line 189
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var23_upvw (read and write)
			]]
			if var17_upvw then
				var23_upvw = true
			end
		end)
		BackwardButton_upvr.MouseButton1Up:Connect(function() -- Line 195
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var23_upvw (read and write)
			]]
			if var17_upvw then
				var23_upvw = false
			end
		end)
		UserInputService_upvr.InputEnded:Connect(function(arg1, arg2) -- Line 201
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var23_upvw (read and write)
			]]
			if arg1.KeyCode == Enum.KeyCode.B and var17_upvw then
				var23_upvw = false
			end
		end)
		UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 207
			--[[ Upvalues[7]:
				[1]: var17_upvw (read and write)
				[2]: var24_upvw (read and write)
				[3]: var25_upvw (read and write)
				[4]: var26_upvw (read and write)
				[5]: X_upvr (readonly)
				[6]: Y_upvr (readonly)
				[7]: Z_upvr (readonly)
			]]
			if arg1.KeyCode == Enum.KeyCode.X and var17_upvw then
				var24_upvw = true
				var25_upvw = false
				var26_upvw = false
				X_upvr.Image = "rbxassetid://16562623753"
				Y_upvr.Image = "rbxassetid://16562604900"
				Z_upvr.Image = "rbxassetid://16562606076"
			end
		end)
		UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 218
			--[[ Upvalues[7]:
				[1]: var17_upvw (read and write)
				[2]: var24_upvw (read and write)
				[3]: var25_upvw (read and write)
				[4]: var26_upvw (read and write)
				[5]: X_upvr (readonly)
				[6]: Y_upvr (readonly)
				[7]: Z_upvr (readonly)
			]]
			if arg1.KeyCode == Enum.KeyCode.Y and var17_upvw then
				var24_upvw = false
				var25_upvw = true
				var26_upvw = false
				X_upvr.Image = "rbxassetid://16562628313"
				Y_upvr.Image = "rbxassetid://16562630011"
				Z_upvr.Image = "rbxassetid://16562606076"
			end
		end)
		UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 229
			--[[ Upvalues[7]:
				[1]: var17_upvw (read and write)
				[2]: var24_upvw (read and write)
				[3]: var25_upvw (read and write)
				[4]: var26_upvw (read and write)
				[5]: X_upvr (readonly)
				[6]: Y_upvr (readonly)
				[7]: Z_upvr (readonly)
			]]
			if arg1.KeyCode == Enum.KeyCode.Z and var17_upvw then
				var24_upvw = false
				var25_upvw = false
				var26_upvw = true
				X_upvr.Image = "rbxassetid://16562628313"
				Y_upvr.Image = "rbxassetid://16562604900"
				Z_upvr.Image = "rbxassetid://16562632722"
			end
		end)
		X_upvr.Activated:Connect(function() -- Line 240
			--[[ Upvalues[7]:
				[1]: var17_upvw (read and write)
				[2]: var24_upvw (read and write)
				[3]: var25_upvw (read and write)
				[4]: var26_upvw (read and write)
				[5]: X_upvr (readonly)
				[6]: Y_upvr (readonly)
				[7]: Z_upvr (readonly)
			]]
			if var17_upvw then
				var24_upvw = true
				var25_upvw = false
				var26_upvw = false
				X_upvr.Image = "rbxassetid://16562623753"
				Y_upvr.Image = "rbxassetid://16562604900"
				Z_upvr.Image = "rbxassetid://16562606076"
			end
		end)
		Y_upvr.Activated:Connect(function() -- Line 251
			--[[ Upvalues[7]:
				[1]: var17_upvw (read and write)
				[2]: var24_upvw (read and write)
				[3]: var25_upvw (read and write)
				[4]: var26_upvw (read and write)
				[5]: X_upvr (readonly)
				[6]: Y_upvr (readonly)
				[7]: Z_upvr (readonly)
			]]
			if var17_upvw then
				var24_upvw = false
				var25_upvw = true
				var26_upvw = false
				X_upvr.Image = "rbxassetid://16562628313"
				Y_upvr.Image = "rbxassetid://16562630011"
				Z_upvr.Image = "rbxassetid://16562606076"
			end
		end)
		Z_upvr.Activated:Connect(function() -- Line 262
			--[[ Upvalues[7]:
				[1]: var17_upvw (read and write)
				[2]: var24_upvw (read and write)
				[3]: var25_upvw (read and write)
				[4]: var26_upvw (read and write)
				[5]: X_upvr (readonly)
				[6]: Y_upvr (readonly)
				[7]: Z_upvr (readonly)
			]]
			if var17_upvw then
				var24_upvw = false
				var25_upvw = false
				var26_upvw = true
				X_upvr.Image = "rbxassetid://16562628313"
				Y_upvr.Image = "rbxassetid://16562604900"
				Z_upvr.Image = "rbxassetid://16562632722"
			end
		end)
		local var59_upvw = true
		local var60_upvw = Vector3.new(0, 0, 0)
		UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 276
			--[[ Upvalues[7]:
				[1]: var59_upvw (read and write)
				[2]: var17_upvw (read and write)
				[3]: var27_upvw (read and write)
				[4]: var24_upvw (read and write)
				[5]: var60_upvw (read and write)
				[6]: var25_upvw (read and write)
				[7]: var26_upvw (read and write)
			]]
			if arg1.KeyCode == Enum.KeyCode.R and var59_upvw == true and var17_upvw then
				var27_upvw = true
				var59_upvw = false
				if var24_upvw then
					var60_upvw += Vector3.new(45, 0, 0)
				elseif var25_upvw then
					var60_upvw += Vector3.new(0, 45, 0)
				elseif var26_upvw then
					var60_upvw += Vector3.new(0, 0, 45)
				end
				task.wait(0.25)
				while var27_upvw do
					if var24_upvw then
						var60_upvw += Vector3.new(45, 0, 0)
					elseif var25_upvw then
						var60_upvw += Vector3.new(0, 45, 0)
					elseif var26_upvw then
						var60_upvw += Vector3.new(0, 0, 45)
					end
					task.wait(0.25)
				end
				var59_upvw = true
			end
		end)
		RotateButton_upvr.MouseButton1Down:Connect(function() -- Line 307
			--[[ Upvalues[7]:
				[1]: var59_upvw (read and write)
				[2]: var17_upvw (read and write)
				[3]: var27_upvw (read and write)
				[4]: var24_upvw (read and write)
				[5]: var60_upvw (read and write)
				[6]: var25_upvw (read and write)
				[7]: var26_upvw (read and write)
			]]
			if var59_upvw == true and var17_upvw then
				var27_upvw = true
				var59_upvw = false
				if var24_upvw then
					var60_upvw += Vector3.new(45, 0, 0)
				elseif var25_upvw then
					var60_upvw += Vector3.new(0, 45, 0)
				elseif var26_upvw then
					var60_upvw += Vector3.new(0, 0, 45)
				end
				task.wait(0.25)
				while var27_upvw do
					if var24_upvw then
						var60_upvw += Vector3.new(45, 0, 0)
					elseif var25_upvw then
						var60_upvw += Vector3.new(0, 45, 0)
					elseif var26_upvw then
						var60_upvw += Vector3.new(0, 0, 45)
					end
					task.wait(0.25)
				end
				var59_upvw = true
			end
		end)
		RotateButton_upvr.MouseButton1Up:Connect(function() -- Line 336
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var27_upvw (read and write)
			]]
			if var17_upvw then
				var27_upvw = false
			end
		end)
		UserInputService_upvr.InputEnded:Connect(function(arg1, arg2) -- Line 344
			--[[ Upvalues[2]:
				[1]: var17_upvw (read and write)
				[2]: var27_upvw (read and write)
			]]
			if arg1.KeyCode == Enum.KeyCode.R and var17_upvw then
				var27_upvw = false
			end
		end)
		local var65_upvw = false
		local Equipped_upvr = Parent_upvr.Remotes:WaitForChild("Equipped")
		local CheckmarkGUI_upvr = XYZ_upvw.CheckmarkGUI
		local cframe_upvw = CFrame.new(Position_upvw + CurrentCamera_upvw.CFrame.LookVector * var32_upvw)
		local TweenService_upvr = game:GetService("TweenService")
		Parent_upvr.Equipped:Connect(function() -- Line 355
			--[[ Upvalues[25]:
				[1]: var17_upvw (read and write)
				[2]: BuildReplicatorPart_upvr (readonly)
				[3]: getAllStuff_upvr (readonly)
				[4]: Equipped_upvr (readonly)
				[5]: any_wait_result1_upvw (read and write)
				[6]: var60_upvw (read and write)
				[7]: Position_upvw (read and write)
				[8]: CurrentCamera_upvw (read and write)
				[9]: var32_upvw (read and write)
				[10]: var18_upvr (readonly)
				[11]: UserInputService_upvr (readonly)
				[12]: TheInventorySystem_upvr (readonly)
				[13]: XYZ_upvw (read and write)
				[14]: var24_upvw (read and write)
				[15]: var25_upvw (read and write)
				[16]: var26_upvw (read and write)
				[17]: X_upvr (readonly)
				[18]: Y_upvr (readonly)
				[19]: Z_upvr (readonly)
				[20]: var22_upvw (read and write)
				[21]: var23_upvw (read and write)
				[22]: var65_upvw (read and write)
				[23]: CheckmarkGUI_upvr (readonly)
				[24]: cframe_upvw (read and write)
				[25]: TweenService_upvr (readonly)
			]]
			-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
			var17_upvw = true
			while 0 < #BuildReplicatorPart_upvr:GetChildren() do
				task.wait()
			end
			getAllStuff_upvr()
			Equipped_upvr:FireServer(any_wait_result1_upvw)
			var60_upvw = Vector3.new(0, 0, 0)
			BuildReplicatorPart_upvr.CFrame = CFrame.new(Position_upvw + CurrentCamera_upvw.CFrame.LookVector * var32_upvw) * CFrame.fromEulerAngles(math.rad(var60_upvw.X), math.rad(var60_upvw.Y), math.rad(var60_upvw.Z))
			for i, v in ipairs(var18_upvr:GetDescendants()) do
				if v:IsA("MeshPart") or v:IsA("Part") then
					local WeldConstraint = Instance.new("WeldConstraint")
					local clone_2 = v:Clone()
					clone_2.Parent = BuildReplicatorPart_upvr
					clone_2.Position = BuildReplicatorPart_upvr.Position + v.Position
					if v.Name ~= "BarrierPart" and v.Name ~= "Epart" and v.Name ~= "PrimPart" and v.Name ~= "OpenPos" then
						clone_2.Transparency = 0.4
					end
					WeldConstraint.Parent = clone_2
					WeldConstraint.Part0 = BuildReplicatorPart_upvr
					WeldConstraint.Part1 = clone_2
					clone_2.CollisionGroup = "Builds"
				end
			end
			if UserInputService_upvr.TouchEnabled == false then
				TheInventorySystem_upvr.KeyboardControlsList.ItemControls.Image = "rbxassetid://17223334384"
			end
			XYZ_upvw.Enabled = true
			var24_upvw = true
			var25_upvw = false
			var26_upvw = false
			X_upvr.Image = "rbxassetid://16562623753"
			Y_upvr.Image = "rbxassetid://16562604900"
			Z_upvr.Image = "rbxassetid://16562606076"
			updateInputRotate()
			updateInputForward()
			updateInputBackward()
			task.wait()
			while var17_upvw do
				CurrentCamera_upvw = workspace.CurrentCamera
				Position_upvw = CurrentCamera_upvw.CFrame.Position
				if var22_upvw == true and var32_upvw < 12.5 then
					var32_upvw += 0.3
				elseif var23_upvw == true and 4 < var32_upvw then
					var32_upvw -= 0.3
				end
				i = BuildReplicatorPart_upvr:GetChildren()
				local ipairs_result1_3, ipairs_result2, ipairs_result3_4 = ipairs(i)
				for _, v_2 in ipairs_result1_3, ipairs_result2, ipairs_result3_4 do
					if v_2:IsA("Part") or v_2:IsA("MeshPart") then
						local var132
						for _, v_3 in ipairs(v_2:GetTouchingParts()) do
							if false == false and (v_3:GetAttribute("AntiBuild") or v_3.Parent:GetAttribute("AntiBuild")) then
							end
							if var132 == false then
								if v_3.Parent ~= BuildReplicatorPart_upvr and v_3 ~= BuildReplicatorPart_upvr and v_3.Parent ~= any_wait_result1_upvw then
									var132 = true
								end
							end
							if var132 == true and true == false then
								var65_upvw = true
								CheckmarkGUI_upvr.Image = "rbxassetid://16629629912"
							else
								var65_upvw = false
								CheckmarkGUI_upvr.Image = "rbxassetid://16629665367"
							end
						end
					end
				end
				ipairs_result2 = CFrame.new
				ipairs_result3_4 = Position_upvw + CurrentCamera_upvw.CFrame.LookVector * var32_upvw
				ipairs_result2 = ipairs_result2(ipairs_result3_4)
				ipairs_result3_4 = CFrame.fromEulerAngles(math.rad(var60_upvw.X), math.rad(var60_upvw.Y), math.rad(var60_upvw.Z))
				cframe_upvw = ipairs_result2 * ipairs_result3_4
				ipairs_result2 = 0.25
				ipairs_result2 = TweenService_upvr
				ipairs_result2 = ipairs_result2:Create(BuildReplicatorPart_upvr, TweenInfo.new(ipairs_result2), {
					CFrame = cframe_upvw;
				})
				ipairs_result3_4 = ipairs_result2:Play()
				ipairs_result3_4()
				ipairs_result3_4 = task.wait
				ipairs_result3_4()
			end
		end)
		Parent_upvr.Unequipped:Connect(function() -- Line 443
			--[[ Upvalues[7]:
				[1]: var17_upvw (read and write)
				[2]: PlayerGui_upvr (readonly)
				[3]: XYZ_upvw (read and write)
				[4]: Rotate_upvw (read and write)
				[5]: MoveForward_upvw (read and write)
				[6]: MoveBackward_upvw (read and write)
				[7]: BuildReplicatorPart_upvr (readonly)
			]]
			var17_upvw = false
			PlayerGui_upvr.TheInventorySystem.KeyboardControlsList.ItemControls.Image = "rbxassetid://110730554989882"
			XYZ_upvw.Enabled = false
			Rotate_upvw.Enabled = false
			MoveForward_upvw.Enabled = false
			MoveBackward_upvw.Enabled = false
			BuildReplicatorPart_upvr:ClearAllChildren()
		end)
		local PlaceSound_upvr = Parent_upvr.PlaceSound
		local Place_upvr = Remotes:WaitForChild("Place")
		local PlaceBuildRemoveItemEvent_upvr = ReplicatedStorage.PlaceBuildRemoveItemEvent
		Parent_upvr.Activated:Connect(function() -- Line 457, Named "place"
			--[[ Upvalues[15]:
				[1]: var17_upvw (read and write)
				[2]: Parent_upvr (readonly)
				[3]: var65_upvw (read and write)
				[4]: PlaceSound_upvr (readonly)
				[5]: BuildReplicatorPart_upvr (readonly)
				[6]: Place_upvr (readonly)
				[7]: var18_upvr (readonly)
				[8]: SlotSelected_upvw (read and write)
				[9]: HotbarLine_upvw (read and write)
				[10]: Inv_upvr (readonly)
				[11]: Storage_upvr (readonly)
				[12]: Hotbar_upvw (read and write)
				[13]: UnEquipRemote_upvw (read and write)
				[14]: PlaceBuildRemoveItemEvent_upvr (readonly)
				[15]: DestroyItemRemote_upvr (readonly)
			]]
			-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
			-- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
			local var162
			-- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [2] 3. Error Block 2 start (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [2] 3. Error Block 2 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [6] 6. Error Block 3 start (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [6] 6. Error Block 3 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [44] 35. Error Block 90 start (CF ANALYSIS FAILED)
			if SlotSelected_upvw.Value == 2 then
				var162 = HotbarLine_upvw.InvSlot2
			elseif SlotSelected_upvw.Value == 3 then
				var162 = HotbarLine_upvw.InvSlot3
			elseif SlotSelected_upvw.Value == 4 then
				var162 = HotbarLine_upvw.InvSlot4
			elseif SlotSelected_upvw.Value == 5 then
				var162 = HotbarLine_upvw.InvSlot5
			elseif SlotSelected_upvw.Value == 6 then
				var162 = HotbarLine_upvw.InvSlot6
			elseif SlotSelected_upvw.Value == 7 then
				var162 = HotbarLine_upvw.InvSlot7
			elseif SlotSelected_upvw.Value == 8 then
				var162 = HotbarLine_upvw.InvSlot8
			elseif SlotSelected_upvw.Value == 9 then
				var162 = HotbarLine_upvw.InvSlot9
			elseif SlotSelected_upvw.Value == 10 then
				var162 = HotbarLine_upvw.InvSlot10
			end
			for i_4, v_4 in ipairs(var162:GetChildren()) do
				if v_4:isA("ImageButton") then
					local var166 = v_4
				end
			end
			if var166.Parent.Parent.Parent == Inv_upvr then
				v_4 = var166.Parent.Parent
				i_4 = v_4.Name
				i_4 = var166.Parent
				i_4 = "DeleteItem"
				v_4 = true
				Storage_upvr[i_4][i_4.Name]:FindFirstChild(var166.Name):SetAttribute(i_4, v_4)
			elseif var166.Parent.Parent.Parent == Storage_upvr then
				v_4 = var166.Parent.Parent
				i_4 = v_4.Name
				i_4 = var166.Parent
				i_4 = "DeleteItem"
				v_4 = true
				Inv_upvr[i_4][i_4.Name]:FindFirstChild(var166.Name):SetAttribute(i_4, v_4)
			end
			for i_5, v_5 in ipairs(Hotbar_upvw:GetChildren()) do
				if tonumber(v_5.Name:match("%d+$")) == SlotSelected_upvw.Value then
					for _, v_6 in ipairs(v_5:GetChildren()) do
						if v_6.Name == Parent_upvr.Name then
							v_6:Destroy()
						end
					end
				end
			end
			if var17_upvw then
				UnEquipRemote_upvw:FireServer()
				i_5 = var166
				PlaceBuildRemoveItemEvent_upvr:FireServer(var162, i_5)
				task.wait(PlaceSound_upvr.TimeLength)
				DestroyItemRemote_upvr:FireServer()
			end
			-- KONSTANTERROR: [44] 35. Error Block 90 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [270] 186. Error Block 51 start (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [270] 186. Error Block 51 end (CF ANALYSIS FAILED)
		end)
		local var174_upvw = false
		local ThrowItemEvent_upvr = ReplicatedStorage.ThrowItemEvent
		UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 529
			--[[ Upvalues[13]:
				[1]: var17_upvw (read and write)
				[2]: var174_upvw (read and write)
				[3]: SlotSelected_upvw (read and write)
				[4]: HotbarLine_upvw (read and write)
				[5]: Hotbar_upvw (read and write)
				[6]: Parent_upvr (readonly)
				[7]: CurrentCamera_upvw (read and write)
				[8]: any_wait_result1_upvw (read and write)
				[9]: UnEquipRemote_upvw (read and write)
				[10]: ThrowItemEvent_upvr (readonly)
				[11]: DestroyItemRemote_upvr (readonly)
				[12]: Inv_upvr (readonly)
				[13]: Storage_upvr (readonly)
			]]
			-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
			-- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
			local var200
			-- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [6] 4. Error Block 2 start (CF ANALYSIS FAILED)
			var200 = var17_upvw
			-- KONSTANTERROR: [6] 4. Error Block 2 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [8] 6. Error Block 3 start (CF ANALYSIS FAILED)
			var200 = var174_upvw
			-- KONSTANTERROR: [8] 6. Error Block 3 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [11] 8. Error Block 4 start (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [11] 8. Error Block 4 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [25] 19. Error Block 85 start (CF ANALYSIS FAILED)
			if SlotSelected_upvw.Value == 2 then
				var200 = HotbarLine_upvw.InvSlot2
			elseif SlotSelected_upvw.Value == 3 then
				var200 = HotbarLine_upvw.InvSlot3
			elseif SlotSelected_upvw.Value == 4 then
				var200 = HotbarLine_upvw.InvSlot4
			elseif SlotSelected_upvw.Value == 5 then
				var200 = HotbarLine_upvw.InvSlot5
			elseif SlotSelected_upvw.Value == 6 then
				var200 = HotbarLine_upvw.InvSlot6
			elseif SlotSelected_upvw.Value == 7 then
				var200 = HotbarLine_upvw.InvSlot7
			elseif SlotSelected_upvw.Value == 8 then
				var200 = HotbarLine_upvw.InvSlot8
			elseif SlotSelected_upvw.Value == 9 then
				var200 = HotbarLine_upvw.InvSlot9
			elseif SlotSelected_upvw.Value == 10 then
				var200 = HotbarLine_upvw.InvSlot10
			end
			for _, v_7 in ipairs(var200:GetChildren()) do
				if v_7:isA("ImageButton") then
					local var204 = v_7
				end
			end
			for _, v_8 in ipairs(Hotbar_upvw:GetChildren()) do
				if tonumber(v_8.Name:match("%d+$")) == SlotSelected_upvw.Value then
					for _, v_9 in ipairs(v_8:GetChildren()) do
						if v_9.Name == Parent_upvr.Name then
							v_9:Destroy()
						end
					end
				end
			end
			CurrentCamera_upvw = workspace.CurrentCamera
			UnEquipRemote_upvw:FireServer()
			ThrowItemEvent_upvr:FireServer(var200, HotbarLine_upvw, Parent_upvr, var204, any_wait_result1_upvw, (CurrentCamera_upvw.CFrame.LookVector * 100 - any_wait_result1_upvw.Torso.Position).Unit * 30)
			task.wait()
			DestroyItemRemote_upvr:FireServer()
			if var204.Parent.Parent.Parent == Inv_upvr then
				Storage_upvr[var204.Parent.Parent.Name][var204.Parent.Name]:FindFirstChild(var204.Name):SetAttribute("DeleteItem", true)
			else
				if var204.Parent.Parent.Parent == Storage_upvr then
					Inv_upvr[var204.Parent.Parent.Name][var204.Parent.Name]:FindFirstChild(var204.Name):SetAttribute("DeleteItem", true)
				end
				-- KONSTANTERROR: [25] 19. Error Block 85 end (CF ANALYSIS FAILED)
				-- KONSTANTERROR: [270] 183. Error Block 49 start (CF ANALYSIS FAILED)
				-- KONSTANTERROR: [270] 183. Error Block 49 end (CF ANALYSIS FAILED)
			end
		end)

	-- boot
	local function boot()
		init()
	end
	boot()
end
