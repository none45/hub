local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local plr = game.Players.LocalPlayer

local conf = loadstring(game:HttpGet('https://raw.githubusercontent.com/none45/hub/refs/heads/main/exploit/hub_settings.lua'))()
local Window = Rayfield:CreateWindow(conf)

local MainTab = Window:CreateTab("universal", nil) -- Title, Image
local MainSection = MainTab:CreateSection("main")

Rayfield:Notify({
	Title = "script executed!!!",
	Content = "thanks for using nones hub",
	Duration = 6.5,
	Image = nil,
	Actions = { -- Notification Buttons
		Ignore = {
			Name = "okay!",
			Callback = function()
				--The user tapped Okay!
			end
		},
	},
})

local Dex = MainTab:CreateButton({
	Name = "dex explorer",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/peyton2465/Dex/master/out.lua"))()
	end,
})

local Orca = MainTab:CreateButton({
	Name = "orca hub",
	Callback = function()
		loadstring(
			game:HttpGetAsync("https://raw.githubusercontent.com/richie0866/orca/master/public/latest.lua")
		)()
	end,
})

local saveinstance = MainTab:CreateButton({
	Name = "saveinstance",
	Callback = function()
		local Params = {
			RepoURL = "https://raw.githubusercontent.com/luau/SynSaveInstance/main/",
			SSI = "saveinstance",
		}
		local synsaveinstance = loadstring(game:HttpGet(Params.RepoURL .. Params.SSI .. ".luau", true), Params.SSI)()
		local Options = {} -- Documentation here https://luau.github.io/UniversalSynSaveInstance/api/SynSaveInstance
		synsaveinstance(Options)
	end,
})

local Divider = MainTab:CreateDivider()

local Lighting = game:GetService("Lighting")

local fullbright = false
local FULLBRIGHT_COLOR = Color3.new(1, 1, 1)

local originalSettings = {
	Ambient = Lighting.Ambient,
	ColorShift_Bottom = Lighting.ColorShift_Bottom,
	ColorShift_Top = Lighting.ColorShift_Top
}

local function setFullbright()
	Lighting.Ambient = FULLBRIGHT_COLOR
	Lighting.ColorShift_Bottom = FULLBRIGHT_COLOR
	Lighting.ColorShift_Top = FULLBRIGHT_COLOR
end

local function revertLighting()
	Lighting.Ambient = originalSettings.Ambient
	Lighting.ColorShift_Bottom = originalSettings.ColorShift_Bottom
	Lighting.ColorShift_Top = originalSettings.ColorShift_Top
end

local fullbright = MainTab:CreateToggle({
	Name = "fullbright",
	CurrentValue = fullbright,
	Flag = "fullbright",
	Callback = function(Value)
		fullbright = Value
		if fullbright then
			setFullbright()
		else
			revertLighting()
		end
	end,
})

Lighting.LightingChanged:Connect(function()
	if fullbright then
		setFullbright()
	else
		if Lighting.Ambient ~= FULLBRIGHT_COLOR then
			originalSettings.Ambient = Lighting.Ambient
		end
		if Lighting.ColorShift_Bottom ~= FULLBRIGHT_COLOR then
			originalSettings.ColorShift_Bottom = Lighting.ColorShift_Bottom
		end
		if Lighting.ColorShift_Top ~= FULLBRIGHT_COLOR then
			originalSettings.ColorShift_Top = Lighting.ColorShift_Top
		end
	end
end)

local ElevatorTab = Window:CreateTab("elevators", nil) -- Title, Image
local MainSection = ElevatorTab:CreateSection("main")

local function findelevator()
	local elevators = {}
	for i,v in pairs(workspace:GetChildren()) do
		if string.find(v.Name,"Elevator system") then table.insert(elevators,v)
		end
		for _,elev in pairs(elevators) do
			local wah = false
			for _,otherplayer in pairs(game.Players:GetChildren()) do
				if otherplayer.Elevator.Value == elev.Name then
					wah = true
				end
			end
			if wah == false then return elev end
		end
	end
end

local tptoevelator = ElevatorTab:CreateButton({
	Name = "teleport to an empty elevator",
	Callback = function()
		local newelevator = findelevator()
		if newelevator then
			local tppart = newelevator.Enter
			plr.Character:PivotTo(tppart.CFrame)
		end
	end,
})

local levels = {
	["The Office"] = 12698037801,
	["The Department Store"] = 13894812015,
	["The Grid of the Angel"] = 13306393719,
	["Humid Fatigue"] = 133565767946066,
	["Blue Hour"] = 94555925675344,
	["The Parking Lot"] = 133761513655992,
	["Sunrise"] = 123504943276137,
	["The Azure Pool"] = 94988327365934,
	["The Basement"] = 87531662447221,
	["The Convention Center"] = 138756869226164,
	["The Gate"] = 74191488858415,
	["Chapter One End"] = 103714114073337,
	["The Dark"] = 120260698457865,
}
local levels1 = {
	"The Office",
	"The Department Store",
	"The Grid of the Angel",
	"Humid Fatigue",
	"Blue Hour",
	"The Parking Lot",
	"Sunrise",
	"The Azure Pool",
	"The Basement",
	"The Convention Center",
	"The Gate",
	"Chapter One End",
	"The Dark",
}

local labels = {
	"Office",
	"Department",
	"HumidFatique",
	"BlueHour",
	"Basement",
	"ConventionCenter",
}

local destination,label = "The Office","Office"

local initiateteleport = ElevatorTab:CreateButton({
	Name = "initiate teleport",
	Callback = function()
		if game.Workspace:FindFirstChild(game.Players.LocalPlayer:WaitForChild("Elevator").Value) then
			game.Players.LocalPlayer.PlayerGui.Menu.Enabled = false
			game.Workspace[game.Players.LocalPlayer:WaitForChild("Elevator").Value].StartQueueRemote:FireServer(label, levels[destination])
		end
	end,
})

local leveldd = ElevatorTab:CreateDropdown({
	Name = "pick the destination",
	Options = levels1,
	CurrentOption = {destination},
	MultipleOptions = false,
	Flag = "leveldd",
	Callback = function(opt)
		destination = opt[1]
	end
})
local labeldd = ElevatorTab:CreateDropdown({
	Name = "pick the label/access lvl",
	Options = labels,
	CurrentOption = {label},
	MultipleOptions = false,
	Flag = "labeldd",
	Callback = function(opt)
		label = opt[1]
	end
})
